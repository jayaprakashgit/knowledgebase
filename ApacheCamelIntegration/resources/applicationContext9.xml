<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://camel.apache.org/schema/spring http://camel.apache.org/schema/spring/camel-spring.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx 
    	http://www.springframework.org/schema/tx/spring-tx.xsd">
        
	<context:annotation-config/>
    <tx:annotation-driven/>
    
    <context:property-placeholder location="classpath:jdbc.properties"/>
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>
          
    <bean id="sessionFactory"
        class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="annotatedClasses">
            <list>
                <value>com.interlan.bo.Department</value>
                <value>com.interlan.bo.Student</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
                <prop key="hibernate.current_session_context_class">thread</prop>
                <prop key="hibernate.show_sql">true</prop>
				<!-- <prop key="hbm2ddl.auto">update</prop>-->
			</props>
        </property>
    </bean>          

	<!-- our interlan db utility which creates/destroys the database table for this example -->
 	<bean id="initDatabase" class="com.interlan.db.utility.DatabaseTableManager"
	      init-method="create" destroy-method="destroy">
	  <property name="dataSource" ref="dataSource"/>
	</bean>
 	 
	<!-- configure the Camel SQL component to use the JDBC data source -->
	<bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
	  <property name="dataSource" ref="dataSource"/>
	</bean>   
	
	<!-- order bean is our business logic bean that creates new orders -->
	<bean id="orderBean" class="com.interlan.processor.OrderProcesssor"/>
	
	<!-- here is Camel configured with a number of routes -->
	<camelContext xmlns="http://camel.apache.org/schema/spring">
	 
	  <!-- use Camel property placeholder loaded from the given file -->
	  <propertyPlaceholder id="placeholder" location="classpath:sql.properties"/>
	 
	  <!-- route that generate new orders and insert them in the database -->
	  <route id="generateOrder-route">
	    <from uri="timer:foo?period=5s"/>
	    <transform>
	      <method ref="orderBean" method="generateOrder"/>
	    </transform>
	    <to uri="sql:{{sql.insertOrder}}"/>
	    <log message="Inserted new order ${body[id]}"/>
	  </route>
	 
	  <!-- route that process the orders by picking up new rows from the database
	       and when done processing then update the row to mark it as processed -->
	  <route id="processOrder-route">
	    <from uri="sql:{{sql.selectOrder}}?consumer.onConsume={{sql.markOrder}}"/>
	    <to uri="bean:orderBean?method=processOrder"/>
	    <log message="${body}"/>
	  </route>
	 
	</camelContext>
	 
</beans>